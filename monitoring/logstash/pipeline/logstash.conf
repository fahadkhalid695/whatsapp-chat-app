input {
  beats {
    port => 5044
  }
}

filter {
  # Parse container logs
  if [container][name] {
    mutate {
      add_field => { "service" => "%{[container][name]}" }
    }
  }

  # Parse nginx access logs
  if [service] == "nginx" and [log][file][path] =~ "access" {
    grok {
      match => { 
        "message" => "%{NGINXACCESS}" 
      }
    }
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    mutate {
      convert => { "response" => "integer" }
      convert => { "bytes" => "integer" }
      convert => { "responsetime" => "float" }
    }
  }

  # Parse nginx error logs
  if [service] == "nginx" and [log][file][path] =~ "error" {
    grok {
      match => { 
        "message" => "%{NGINXERROR}" 
      }
    }
  }

  # Parse application logs (JSON format)
  if [service] in ["backend", "web"] {
    json {
      source => "message"
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }

  # Parse PostgreSQL logs
  if [service] == "postgresql" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:pid}\]: \[%{DATA:line_num}\] %{WORD:user}=%{DATA:username},db=%{DATA:database},app=%{DATA:application},client=%{DATA:client_ip} %{GREEDYDATA:sql_message}" 
      }
    }
    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS zzz" ]
    }
  }

  # Add environment and common fields
  mutate {
    add_field => { "environment" => "production" }
    add_field => { "[@metadata][index]" => "chatapp-logs-%{+YYYY.MM.dd}" }
  }

  # Remove unnecessary fields
  mutate {
    remove_field => [ "agent", "ecs", "host", "input", "log" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][index]}"
    template_name => "chatapp"
    template_pattern => "chatapp-*"
    template => {
      "index_patterns" => ["chatapp-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
        "index.refresh_interval" => "5s"
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "service" => { "type" => "keyword" }
          "environment" => { "type" => "keyword" }
          "level" => { "type" => "keyword" }
          "message" => { "type" => "text" }
          "response" => { "type" => "integer" }
          "bytes" => { "type" => "integer" }
          "responsetime" => { "type" => "float" }
          "client_ip" => { "type" => "ip" }
        }
      }
    }
  }

  # Debug output (remove in production)
  # stdout { codec => rubydebug }
}